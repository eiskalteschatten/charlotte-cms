@use "sass:color";
@use "sass:meta";
@use "variables";
@use "mixins";

html {
  --background-color: #{variables.$lightBg};
  --background-secondary-color: #{variables.$lightSecondaryBg};
  --gradient-start-color: #{variables.$lightBg};
  --gradient-end-color: #f8f7f7;
  --background-gradient: linear-gradient(0deg, var(--gradient-start-color) 0%, var(--gradient-end-color) 100%);
  --opposite-background-color: #{variables.$darkBg};
  --color: #{variables.$lightColor};
  --opposite-color: #{variables.$darkColor};
  --dropdown-menu-background-color: #ffffff;
  --primary-color: #{variables.$primaryColor};
  --border-color: #{variables.$lightBorderColor};
  --border-lighter-color: #{variables.$lightBorderLighterColor};
  --border-radius: #{variables.$borderRadius};
  --hover-background-color: #{color.adjust(variables.$lightBg, $lightness: -10%)};
  --active-background-color: #{color.adjust(variables.$lightBg, $lightness: -5%)};
  --shadow-color: #{variables.$lightShadowColor};
  --backdrop-color: #ffffff98;
  --form-base-active-background-color: #ffffff;

  &[tf-theme='dark'] {
    --background-color: #{variables.$darkBg};
    --background-secondary-color: #{variables.$darkSecondaryBg};
    --gradient-start-color: #{variables.$darkBg};
    --gradient-end-color: #{color.adjust(variables.$darkBg, $lightness: 5%)};
    --background-gradient: linear-gradient(0deg, var(--gradient-start-color) 0%, var(--gradient-end-color) 100%);
    --opposite-background-color: #{variables.$lightBg};
    --color: #{variables.$darkColor};
    --opposite-color: #{variables.$lightColor};
    --dropdown-menu-background-color: #{variables.$darkSecondaryBg};
    --border-color: #{variables.$darkBorderColor};
    --border-lighter-color: #{variables.$darkBorderLighterColor};
    --hover-background-color: #{color.adjust(variables.$darkBg, $lightness: 11%)};
    --active-background-color: #{color.adjust(variables.$darkBg, $lightness: 7%)};
    --shadow-color: #{variables.$darkShadowColor};
    --backdrop-color: #00000098;
    --form-base-active-background-color: #000000;
  }
}

html, body {
  padding: 0;
  // background-color: var(--background-color);
  background: var(--background-gradient);
  background-attachment: fixed;
  color: var(--color);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  min-height: 100vh;
  width: 100%;
}

body {
  &.mobile-menu-open {
    overflow: hidden;

    mobile-menu-backdrop {
      display: block;
      background-color: var(--backdrop-color);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

a {
  color: var(--primary-color);
  transition: color 200ms;
  text-decoration: none;

  &:hover {
    color: var(--color);
  }

  &.primary {
    color: var(--primary-color);

    &:hover {
      color: var(--color);
    }
  }

  &.body-color {
    @include mixins.hoverPrimaryLink;
  }

  &.has-icon {
    display: flex;
    align-items: center;
    gap: 5px;
  }
}

h2, h3 {
  padding-top: .4em;
  padding-bottom: .6em;
}

.page-title {
  padding-bottom: 35px;
  font-family: 'Quantico', sans-serif;

  &.no-padding-bottom {
    padding-bottom: 0;
    margin-bottom: 0;
  }
}

.sub-headline {
  opacity: .65;
  transition: opacity 250ms;

  &:hover {
    opacity: 1;
  }

  p {
    margin: 15px 0 0 0;
  }
}

.headline-description {
  font-size: 1.1em;
}

.low-opacity-text {
  opacity: .65;
  transition: opacity 250ms;

  &:hover {
    opacity: 1;
  }
}

.badge {
  text-decoration: none;
  display: block;
  border-radius: var(--border-radius);
  background-color: var(--background-secondary-color);
  padding: 5px 12px;
  transition: background-color 350ms;
  font-size: .9em;
  font-weight: 700;
  color: var(--color);

  a {
    text-decoration: none;
    color: var(--color);

    &:hover {
      color: #000000;
    }
  }

  &:hover {
    color: variables.$darkColor;
    background-color: var(--primary-color);

    a {
      color: variables.$darkColor;
    }
  }

  &.small {
    font-weight: 600;
    font-size: .85em;
    padding: 3px 10px;
  }

  &.primary {
    color: variables.$darkColor;
    background-color: var(--primary-color);

    a {
      color: variables.$darkColor;
    }
  }

  &.bg-color {
    color: var(--color);
    background-color: var(--background-color);

    a {
      color: var(--color);
    }
  }
}

.alert {
  border-radius: var(--border-radius);
  padding: 8px 15px;

  &.error {
    background-color: variables.$errorColor;
    color: #ffffff;
    border: 1px solid color.adjust(variables.$errorColor, $lightness: -15%);
  }

  &.success {
    background-color: variables.$successColor;
    color: #ffffff;
    border: 1px solid color.adjust(variables.$successColor, $lightness: -5%);
  }
}

.rounded-box {
  @include mixins.roundedBox;
}

.small-section-title {
  margin-bottom: 15px;
  padding-bottom: 10px;
  border-bottom: 1px solid var(--border-color);
}

.link-box {
  @include mixins.roundedBox;
  flex-basis: 32%;

  @media (max-width: variables.$smMax) {
    flex-basis: 48.9%;
  }

  @media (max-width: variables.$xsMax) {
    flex-basis: 100%;
  }

  .link {
    font-weight: 600;
    font-size: 1.2em;
  }

  .description {
    font-size: .9em;
    opacity: .9;
  }
}

@include meta.load-css("fonts");
@include meta.load-css("structure");
@include meta.load-css("home");
@include meta.load-css("header");
@include meta.load-css("logo");
@include meta.load-css("buttons");
@include meta.load-css("forms");
@include meta.load-css("nav");
@include meta.load-css("auth");
@include meta.load-css("contact");
@include meta.load-css("footer");
@include meta.load-css("spinner");
@include meta.load-css("toast");
@include meta.load-css("sidebar");
@include meta.load-css("stories");
@include meta.load-css("pagination");
@include meta.load-css("categories");
@include meta.load-css("tags");
@include meta.load-css("user/index");
@include meta.load-css("web-components/index");
